[{"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\index.js":"1","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\store.js":"3","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\App.js":"4","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\reducers\\productReducer.js":"5","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\RegisterScreen.js":"6","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\PaymentScreen.js":"7","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\components\\Footer.js":"8","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\LoginScreen.js":"9","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\reducers\\orderReducer.js":"10","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\reducers\\cartReducer.js":"11","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\reducers\\userReducers.js":"12","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\ProductScreen.js":"13","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\CartScreen.js":"14","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\HomeScreen.js":"15","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\ProfileScreen.js":"16","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\ShippingScreen.js":"17","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\UserListScreen.js":"18","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\OrderScreen.js":"19","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\placeOrderScreen.js":"20","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\components\\Header.js":"21","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\components\\Loader.js":"22","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\components\\Message.js":"23","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\components\\CheckoutSteps.js":"24","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\constants\\productConstants.js":"25","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\components\\Rating.js":"26","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\constants\\cartConstants.js":"27","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\actions\\productActions.js":"28","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\actions\\cartActions.js":"29","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\components\\FormContainer.js":"30","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\constants\\orderConstants.js":"31","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\constants\\userConstants.js":"32","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\components\\Product.js":"33","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\actions\\userAction.js":"34","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\actions\\orderActions.js":"35","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\Admin\\UserEditScreen.js":"36","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\Admin\\productsListScreen.js":"37"},{"size":691,"mtime":1612004481625,"results":"38","hashOfConfig":"39"},{"size":375,"mtime":1610034529299,"results":"40","hashOfConfig":"39"},{"size":2194,"mtime":1612852212891,"results":"41","hashOfConfig":"39"},{"size":2259,"mtime":1612812446673,"results":"42","hashOfConfig":"39"},{"size":1685,"mtime":1612849536322,"results":"43","hashOfConfig":"39"},{"size":3539,"mtime":1611938264835,"results":"44","hashOfConfig":"39"},{"size":1928,"mtime":1611938264834,"results":"45","hashOfConfig":"39"},{"size":241,"mtime":1610034529297,"results":"46","hashOfConfig":"39"},{"size":2758,"mtime":1611938264833,"results":"47","hashOfConfig":"39"},{"size":2844,"mtime":1612592063439,"results":"48","hashOfConfig":"39"},{"size":1416,"mtime":1612592063435,"results":"49","hashOfConfig":"39"},{"size":4030,"mtime":1612723438668,"results":"50","hashOfConfig":"39"},{"size":5249,"mtime":1612608634445,"results":"51","hashOfConfig":"39"},{"size":4253,"mtime":1612592063449,"results":"52","hashOfConfig":"39"},{"size":1103,"mtime":1612592063455,"results":"53","hashOfConfig":"39"},{"size":5969,"mtime":1612592063470,"results":"54","hashOfConfig":"39"},{"size":2745,"mtime":1612592063474,"results":"55","hashOfConfig":"39"},{"size":2885,"mtime":1612723438670,"results":"56","hashOfConfig":"39"},{"size":6501,"mtime":1612592063460,"results":"57","hashOfConfig":"39"},{"size":6279,"mtime":1612592063483,"results":"58","hashOfConfig":"39"},{"size":4046,"mtime":1612592063415,"results":"59","hashOfConfig":"39"},{"size":507,"mtime":1612723438667,"results":"60","hashOfConfig":"39"},{"size":291,"mtime":1610633460401,"results":"61","hashOfConfig":"39"},{"size":1844,"mtime":1611938264829,"results":"62","hashOfConfig":"39"},{"size":538,"mtime":1612849536368,"results":"63","hashOfConfig":"39"},{"size":1706,"mtime":1610034529298,"results":"64","hashOfConfig":"39"},{"size":238,"mtime":1611938264831,"results":"65","hashOfConfig":"39"},{"size":2476,"mtime":1612850185034,"results":"66","hashOfConfig":"39"},{"size":1325,"mtime":1611938264828,"results":"67","hashOfConfig":"39"},{"size":426,"mtime":1612592063410,"results":"68","hashOfConfig":"39"},{"size":812,"mtime":1612592063425,"results":"69","hashOfConfig":"39"},{"size":1505,"mtime":1612723438668,"results":"70","hashOfConfig":"39"},{"size":984,"mtime":1612592063420,"results":"71","hashOfConfig":"39"},{"size":7035,"mtime":1612723438667,"results":"72","hashOfConfig":"39"},{"size":3727,"mtime":1612592063401,"results":"73","hashOfConfig":"39"},{"size":3536,"mtime":1612805477065,"results":"74","hashOfConfig":"39"},{"size":3608,"mtime":1612852212877,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1ts6yo3",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"78"},"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\index.js",[],["158","159"],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\store.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\App.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\reducers\\productReducer.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\reducers\\orderReducer.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\reducers\\cartReducer.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\UserListScreen.js",["160"],"import React, {useEffect} from 'react';\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport {Table, Button} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {listUser, deleteUser} from \"../actions/userAction\";\r\n\r\nconst UserListScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const {success: successDelete} = userDelete\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUser())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete,userInfo])\r\n\r\n\r\n    const UserList = users.map(user => (\r\n        <tr key={user._id}>\r\n            <td>{user._id}</td>\r\n            <td>{user.name}</td>\r\n            <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n            <td>\r\n                {\r\n                    user.isAdmin ? <i style={{color: 'green'}} className='fas fa-check'> </i> :\r\n                        <i className='fas fa-times' style={{color: 'red'}}> </i>\r\n\r\n                }</td>\r\n            <td style={{textAlign: \"center\"}}>\r\n                <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'> </i>\r\n                    </Button>\r\n                </LinkContainer>\r\n                <Button variant='danger' className='btn-sm btn'\r\n                        onClick={() => deleteHandler(user._id)}>\r\n                    <i className='fas fa-trash'> </i>\r\n                </Button>\r\n            </td>\r\n        </tr>\r\n    ))\r\n\r\n    const deleteHandler = (id) => {\r\n        dispatch(deleteUser(id))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> :\r\n                (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                        {UserList}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                )\r\n\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserListScreen;","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\OrderScreen.js",["161","162","163","164","165"],"import React, {useState, useEffect} from 'react';\r\nimport {Button, Row, Col, ListGroup, Image, Card} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {getOrderDetails, payOrder} from \"../actions/orderActions\";\r\nimport {ORDER_PAY_RESET} from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({match}) => {\r\n\r\n    const orderId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n\r\n    const {order, loading, error} = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n\r\n    const { loading:loadingPay, success:successPay} = orderPay\r\n\r\n\r\n    if (!loading) {\r\n        // calculate price\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => (\r\n            acc + item.price * item.qty\r\n        ), 0)\r\n\r\n        order.shippingPrice = order.itemsPrice > 100 ? 0 : 5\r\n    }\r\n    useEffect(() => {\r\n        if (!order ||successPay){\r\n            dispatch({type:ORDER_PAY_RESET})\r\n        }\r\n        dispatch(getOrderDetails(orderId))\r\n    }, [dispatch, orderId])\r\n\r\n    const SuccessPaymentHandler = () => {\r\n        dispatch(payOrder(orderId ))\r\n    }\r\n    return loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> :\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <Row>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Shipping</h2>\r\n                                <p><strong>Name :</strong>{order.user.name}</p>\r\n                                <p><a href=\"{`mailto : ${order.user.email}`}\">{order.user.email}</a></p>\r\n                                <p>\r\n                                    <strong>Address:</strong>\r\n                                    {order.shippingAddress.address},\r\n                                    {order.shippingAddress.city},\r\n                                    {order.shippingAddress.country},\r\n                                    {order.shippingAddress.postalCode},\r\n                                </p>\r\n                                {order.isDelivered ?\r\n                                    <Message variant='success'>Delivered on {order.deliveredAt}</Message> :\r\n                                    <Message variant='danger'>Not Delivered</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <h2>Payment Method</h2>\r\n                                <strong>Method : </strong>\r\n                                <p>  {order.paymentMethod.paymentMethod}</p>\r\n                                {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> :\r\n                                    <Message variant='danger'>Not paid</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Items</h2>\r\n                                {order.orderItems.length === 0 ? <Message>Order is empty</Message> :\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <Row className=\"mt-3\" key={item.product}>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n\r\n                                                </Col>\r\n                                            </Row>\r\n                                        ))}\r\n                                    </ListGroup>\r\n\r\n                                }\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                 <Button onClick=\"SuccessPaymentHandler\" variant='info'>\r\n                                     Pay\r\n                                 </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n};\r\n\r\nexport default OrderScreen;","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\placeOrderScreen.js",["166"],"import React, {useState, useEffect} from 'react';\r\nimport {Button, Row, Col, ListGroup, Image, Card} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {createOrder} from \"../actions/orderActions\";\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => (\r\n        acc + item.price * item.qty\r\n    ), 0)\r\n\r\n    cart.shippingPrice = cart.itemsPrice > 100 ? 0 : 5\r\n\r\n    cart.taxPrice = Number((0.15 * cart.itemsPrice).toFixed(2))\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {order, success, error} = orderCreate\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n    }, [history, success, order])\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <Row>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Shipping</h2>\r\n                                <p>\r\n                                    <strong>Address:</strong>\r\n                                    {cart.shippingAddress.address},\r\n                                    {cart.shippingAddress.city},\r\n                                    {cart.shippingAddress.country},\r\n                                    {cart.shippingAddress.postalCode},\r\n                                </p>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <h2>Payment Method</h2>\r\n                                <strong>Method : </strong>\r\n                                {cart.paymentMethod.paymentMethod}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Items</h2>\r\n                                {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> :\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <Row className=\"mt-3\" key={item.product}>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n\r\n                                                </Col>\r\n                                            </Row>\r\n                                        ))}\r\n                                    </ListGroup>\r\n\r\n                                }\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn-block' disabled={cart.cartItems === 0}\r\n                                        onClick={placeOrderHandler}>\r\n                                    place order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PlaceOrderScreen;","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\components\\Header.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\components\\Message.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\actions\\productActions.js",["167","168"],"import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS\r\n} from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\nimport {ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS} from \"../constants/orderConstants\";\r\n\r\n// redux action for calling reducer\r\n// return object\r\n// reason function in function is THUNK for async request\r\n// \"dispatch\" for dispatch requests\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_LIST_REQUEST\r\n        })\r\n        const {data} = await axios.get('/api/products')\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n        const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message && localStorage.removeItem('userInfo')\r\n\r\n        })\r\n\r\n    }\r\n}","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\actions\\cartActions.js",[],["169","170"],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\components\\Product.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\actions\\userAction.js",["171"],"import {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL, USER_ADMIN_UPDATE_REQUEST, USER_ADMIN_UPDATE_SUCCESS, USER_ADMIN_UPDATE_FAIL\r\n} from \"../constants/userConstants\";\r\nimport {ORDER_LIST_MY_REST} from '../constants/orderConstants'\r\nimport axios from \"axios\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('/api/users/login', {email, password}, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('/api/users', {name, email, password}, config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const listUser = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload:\r\n\r\n                error.response && error.response.data.message ? (error.response.data.message , localStorage.removeItem('userInfo')) : error.message\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const adminUpdateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_ADMIN_UPDATE_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json', // have form input data\r\n                 Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/users/${user._id}`, user , config)\r\n\r\n        dispatch({\r\n            type: USER_ADMIN_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload : data\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: USER_ADMIN_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const Logout = () => (dispatch) => {\r\n\r\n    localStorage.removeItem('userInfo')\r\n\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n    dispatch({\r\n        type: USER_DETAILS_RESET\r\n    })\r\n    dispatch({\r\n        type: ORDER_LIST_MY_REST\r\n    })\r\n\r\n    dispatch({\r\n        type: USER_LIST_RESET\r\n    })\r\n}","C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\Admin\\UserEditScreen.js",[],"C:\\Users\\mahdi\\Desktop\\jsShop\\frontend\\src\\screens\\Admin\\productsListScreen.js",["172"],"import React, {useEffect} from 'react';\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport {Table, Button, Row, Col} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../../components/Message\";\r\nimport Loader from \"../../components/Loader\";\r\nimport {listProducts,deleteProduct} from \"../../actions/productActions\";\r\n\r\nconst ProductListScreen = ({history, match}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products} = productList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {loading : loadingDelete, error : errorDelete,  success:successDelete} = productDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listProducts())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo,successDelete])\r\n\r\n\r\n    const ProductList = products.map(product => (\r\n        <tr key={product._id}>\r\n            <td>{product._id}</td>\r\n            <td>{product.name}</td>\r\n            <td>\r\n                {product.price}\r\n            </td>\r\n            <td>\r\n                {product.category}\r\n            </td>\r\n            <td>\r\n                {product.brand}\r\n            </td>\r\n            <td style={{textAlign: \"center\"}}>\r\n                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'> </i>\r\n                    </Button>\r\n                </LinkContainer>\r\n                <Button variant='danger' className='btn-sm btn'\r\n                        onClick={() => deleteHandler(product._id)}>\r\n                    <i className='fas fa-trash'> </i>\r\n                </Button>\r\n            </td>\r\n        </tr>\r\n    ))\r\n\r\n    const deleteHandler = (id) => {\r\n          if (window.confirm('Are you sure')){\r\n              dispatch(deleteProduct(id))\r\n          }\r\n    }\r\n\r\n    const createProductHandler = (product) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button onClick={createProductHandler} className='my-3'>\r\n                        <i className='fas fa-plus'> </i> Creat product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader/>}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message> }\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> :\r\n                (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>price</th>\r\n                            <th>Category</th>\r\n                            <th>Brand</th>\r\n                            <th></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                        {ProductList}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                )\r\n\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductListScreen;",{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":28,"column":8,"nodeType":"179","endLine":28,"endColumn":40,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":1,"column":16,"nodeType":"183","messageId":"184","endLine":1,"endColumn":24},{"ruleId":"181","severity":1,"message":"185","line":23,"column":21,"nodeType":"183","messageId":"184","endLine":23,"endColumn":31},{"ruleId":"177","severity":1,"message":"186","line":39,"column":8,"nodeType":"179","endLine":39,"endColumn":27,"suggestions":"187"},{"ruleId":"181","severity":1,"message":"188","line":41,"column":11,"nodeType":"183","messageId":"184","endLine":41,"endColumn":32},{"ruleId":"189","severity":1,"message":"190","line":54,"column":44,"nodeType":"191","messageId":"192","endLine":54,"endColumn":78},{"ruleId":"181","severity":1,"message":"182","line":1,"column":16,"nodeType":"183","messageId":"184","endLine":1,"endColumn":24},{"ruleId":"181","severity":1,"message":"193","line":10,"column":29,"nodeType":"183","messageId":"184","endLine":10,"endColumn":50},{"ruleId":"181","severity":1,"message":"194","line":10,"column":52,"nodeType":"183","messageId":"184","endLine":10,"endColumn":73},{"ruleId":"173","replacedBy":"195"},{"ruleId":"175","replacedBy":"196"},{"ruleId":"181","severity":1,"message":"197","line":217,"column":16,"nodeType":"183","messageId":"184","endLine":217,"endColumn":20},{"ruleId":"181","severity":1,"message":"198","line":19,"column":45,"nodeType":"183","messageId":"184","endLine":19,"endColumn":56},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.","ArrayExpression",["201"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'loadingPay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'order' and 'successPay'. Either include them or remove the dependency array.",["202"],"'SuccessPaymentHandler' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'ORDER_LIST_MY_REQUEST' is defined but never used.","'ORDER_LIST_MY_SUCCESS' is defined but never used.",["199"],["200"],"'data' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},"Update the dependencies array to be: [dispatch, history, successDelete, userInfo]",{"range":"207","text":"208"},"Update the dependencies array to be: [dispatch, order, orderId, successPay]",{"range":"209","text":"210"},[923,955],"[dispatch, history, successDelete, userInfo]",[1221,1240],"[dispatch, order, orderId, successPay]"]