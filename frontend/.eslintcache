[{"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\index.js":"1","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\store.js":"3","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\App.js":"4","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\reducers\\cartReducer.js":"5","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\Footer.js":"6","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\reducers\\userReducers.js":"7","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\reducers\\orderReducer.js":"8","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\HomeScreen.js":"9","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\Header.js":"10","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\CartScreen.js":"11","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\RegisterScreen.js":"12","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\LoginScreen.js":"13","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\ProfileScreen.js":"14","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\PaymentScreen.js":"15","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\ShippingScreen.js":"16","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\placeOrderScreen.js":"17","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\OrderScreen.js":"18","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\UserListScreen.js":"19","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\reducers\\productReducer.js":"20","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\ProductScreen.js":"21","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\Admin\\productsListScreen.js":"22","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\Admin\\UserEditScreen.js":"23","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\Admin\\productEditScreen.js":"24","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\Loader.js":"25","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\Message.js":"26","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\FormContainer.js":"27","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\CheckoutSteps.js":"28","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\constants\\cartConstants.js":"29","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\constants\\userConstants.js":"30","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\constants\\orderConstants.js":"31","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\Rating.js":"32","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\Product.js":"33","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\actions\\userAction.js":"34","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\actions\\cartActions.js":"35","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\actions\\orderActions.js":"36","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\constants\\productConstants.js":"37","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\actions\\productActions.js":"38","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\Admin\\ordersListScreen.js":"39","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\SearchBox.js":"40","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\Paginate.js":"41"},{"size":691,"mtime":1612074975051,"results":"42","hashOfConfig":"43"},{"size":375,"mtime":1609998591956,"results":"44","hashOfConfig":"43"},{"size":2565,"mtime":1613374631237,"results":"45","hashOfConfig":"43"},{"size":3350,"mtime":1613548646995,"results":"46","hashOfConfig":"43"},{"size":1416,"mtime":1612074886241,"results":"47","hashOfConfig":"43"},{"size":241,"mtime":1609998591952,"results":"48","hashOfConfig":"43"},{"size":4030,"mtime":1612691445210,"results":"49","hashOfConfig":"43"},{"size":4177,"mtime":1613294406993,"results":"50","hashOfConfig":"43"},{"size":1488,"mtime":1613546081279,"results":"51","hashOfConfig":"43"},{"size":4213,"mtime":1613464365353,"results":"52","hashOfConfig":"43"},{"size":4253,"mtime":1612092355964,"results":"53","hashOfConfig":"43"},{"size":3539,"mtime":1611561196133,"results":"54","hashOfConfig":"43"},{"size":2758,"mtime":1611658313566,"results":"55","hashOfConfig":"43"},{"size":5969,"mtime":1612429052809,"results":"56","hashOfConfig":"43"},{"size":1928,"mtime":1612074469016,"results":"57","hashOfConfig":"43"},{"size":2745,"mtime":1612346278002,"results":"58","hashOfConfig":"43"},{"size":6279,"mtime":1612167395441,"results":"59","hashOfConfig":"43"},{"size":7583,"mtime":1613299782907,"results":"60","hashOfConfig":"43"},{"size":2886,"mtime":1613288927450,"results":"61","hashOfConfig":"43"},{"size":3699,"mtime":1613543672717,"results":"62","hashOfConfig":"43"},{"size":9951,"mtime":1613386545358,"results":"63","hashOfConfig":"43"},{"size":4560,"mtime":1613548994013,"results":"64","hashOfConfig":"43"},{"size":3536,"mtime":1613197631929,"results":"65","hashOfConfig":"43"},{"size":8640,"mtime":1613204084882,"results":"66","hashOfConfig":"43"},{"size":507,"mtime":1612696688198,"results":"67","hashOfConfig":"43"},{"size":291,"mtime":1610532181381,"results":"68","hashOfConfig":"43"},{"size":426,"mtime":1612346277933,"results":"69","hashOfConfig":"43"},{"size":1844,"mtime":1612074469004,"results":"70","hashOfConfig":"43"},{"size":238,"mtime":1611745484024,"results":"71","hashOfConfig":"43"},{"size":1505,"mtime":1612690895129,"results":"72","hashOfConfig":"43"},{"size":1216,"mtime":1613294407008,"results":"73","hashOfConfig":"43"},{"size":1706,"mtime":1609998591954,"results":"74","hashOfConfig":"43"},{"size":997,"mtime":1613197631908,"results":"75","hashOfConfig":"43"},{"size":7035,"mtime":1612692366461,"results":"76","hashOfConfig":"43"},{"size":1325,"mtime":1611745648857,"results":"77","hashOfConfig":"43"},{"size":5459,"mtime":1613297702606,"results":"78","hashOfConfig":"43"},{"size":1314,"mtime":1613373801729,"results":"79","hashOfConfig":"43"},{"size":5313,"mtime":1613470506710,"results":"80","hashOfConfig":"43"},{"size":3298,"mtime":1613292056871,"results":"81","hashOfConfig":"43"},{"size":839,"mtime":1613462752240,"results":"82","hashOfConfig":"43"},{"size":686,"mtime":1613548808630,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"13pndhl",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\index.js",[],["172","173"],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\store.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\App.js",["174"],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\reducers\\cartReducer.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\reducers\\orderReducer.js",["175"],"import {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_RESET, ORDER_DELIVER_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_REST,\r\n    ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_REST, ORDER_LIST_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_RESET,\r\n    ORDER_PAY_SUCCESS,\r\n} from \"../constants/orderConstants\";\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST :\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS :\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL :\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const orderDetailReducer = (state = {loading: true, orderItems: [], shippingAddress: {}}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST :\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS :\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL :\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const orderUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST :\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS :\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL :\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET :\r\n            return {}\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = {orders: []}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST :\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS :\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL :\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_REST :\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const adminOrderList = (state = {orders: []}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST :\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_SUCCESS :\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL :\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {orders: []}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST :\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS :\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL :\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET :\r\n            return {}\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\Header.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\placeOrderScreen.js",["176"],"import React, {useState, useEffect} from 'react';\r\nimport {Button, Row, Col, ListGroup, Image, Card} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {createOrder} from \"../actions/orderActions\";\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => (\r\n        acc + item.price * item.qty\r\n    ), 0)\r\n\r\n    cart.shippingPrice = cart.itemsPrice > 100 ? 0 : 5\r\n\r\n    cart.taxPrice = Number((0.15 * cart.itemsPrice).toFixed(2))\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {order, success, error} = orderCreate\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n    }, [history, success, order])\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <Row>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Shipping</h2>\r\n                                <p>\r\n                                    <strong>Address:</strong>\r\n                                    {cart.shippingAddress.address},\r\n                                    {cart.shippingAddress.city},\r\n                                    {cart.shippingAddress.country},\r\n                                    {cart.shippingAddress.postalCode},\r\n                                </p>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <h2>Payment Method</h2>\r\n                                <strong>Method : </strong>\r\n                                {cart.paymentMethod.paymentMethod}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Items</h2>\r\n                                {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> :\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <Row className=\"mt-3\" key={item.product}>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n\r\n                                                </Col>\r\n                                            </Row>\r\n                                        ))}\r\n                                    </ListGroup>\r\n\r\n                                }\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn-block' disabled={cart.cartItems === 0}\r\n                                        onClick={placeOrderHandler}>\r\n                                    place order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PlaceOrderScreen;","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\OrderScreen.js",["177","178","179","180","181"],"import React, {useState, useEffect} from 'react';\r\nimport {Button, Row, Col, ListGroup, Image, Card} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {getOrderDetails, payOrder, deliverOrder} from \"../actions/orderActions\";\r\nimport {ORDER_DELIVER_RESET, ORDER_PAY_RESET,} from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({match}) => {\r\n\r\n    const orderId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n\r\n    const {order, loading, error} = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n\r\n    const {loading: loadingPay, success: successPay} = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n\r\n    const {loading: loadingDeliver, success: successDeliver} = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n\r\n    const {userInfo} = userLogin\r\n\r\n    if (!loading) {\r\n        // calculate price\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => (\r\n            acc + item.price * item.qty\r\n        ), 0)\r\n\r\n        order.shippingPrice = order.itemsPrice > 100 ? 0 : 5\r\n    }\r\n    useEffect(() => {\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n        }\r\n        dispatch(getOrderDetails(orderId))\r\n    }, [dispatch, orderId, successDeliver, successPay])\r\n\r\n    const SuccessPaymentHandler = () => {\r\n        dispatch(payOrder(orderId))\r\n    }\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n    return loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> :\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <Row>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Shipping</h2>\r\n                                <p><strong>Name :</strong>{order.user.name}</p>\r\n                                <p><a href=\"{`mailto : ${order.user.email}`}\">{order.user.email}</a></p>\r\n                                <p>\r\n                                    <strong>Address:</strong>\r\n                                    {order.shippingAddress.address},\r\n                                    {order.shippingAddress.city},\r\n                                    {order.shippingAddress.country},\r\n                                    {order.shippingAddress.postalCode},\r\n                                </p>\r\n                                {order.isDelivered ?\r\n                                    <Message variant='success'>Delivered on {order.deliveredAt}</Message> :\r\n                                    <Message variant='danger'>Not Delivered</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <h2>Payment Method</h2>\r\n                                <strong>Method : </strong>\r\n                                <p>  {order.paymentMethod.paymentMethod}</p>\r\n                                {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> :\r\n                                    <Message variant='danger'>Not paid</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Items</h2>\r\n                                {order.orderItems.length === 0 ? <Message>Order is empty</Message> :\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <Row className=\"mt-3\" key={item.product}>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        ))}\r\n                                    </ListGroup>\r\n\r\n                                }\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {loadingDeliver && <loader/>}\r\n                                {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button onClick={deliverHandler} type='button' className='btn btn-block'>\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button onClick=\"SuccessPaymentHandler\" variant='info'>\r\n                                    Pay\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n};\r\n\r\nexport default OrderScreen;","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\reducers\\productReducer.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\Admin\\productsListScreen.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\Admin\\UserEditScreen.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\Admin\\productEditScreen.js",["182"],"import axios from \"axios\";\r\nimport React, {useState, useEffect} from 'react';\r\nimport {Form, Button, Col, Container, Row, Image} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../../components/Message\";\r\nimport Loader from \"../../components/Loader\";\r\nimport {listProductDetails, updateProduct} from \"../../actions/productActions\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {PRODUCT_UPDATE_RESET} from \"../../constants/productConstants\";\r\n\r\nconst ProductEditScreen = ({match, history}) => {\r\n    const productId = match.params.id //url param :id\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('/placeholder.png')\r\n    const [file, setFile] = useState('');\r\n    const [brand, setBrand] = useState()\r\n    const [category, setCategory] = useState()\r\n    const [countInStock, setCountInStock] = useState()\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const {error: errorUpdate, loading: loadingUpdate, success: successUpdate} = productUpdate\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const {loading, error, product} = productDetails\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match]);\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            //for remove old data product\r\n            dispatch({type: PRODUCT_UPDATE_RESET});\r\n        }\r\n\r\n        if (loading === false) {\r\n            setName(product.name)\r\n            setPrice(product.price)\r\n            setImage(product.image)\r\n            setBrand(product.brand)\r\n            setCategory(product.category)\r\n            setCountInStock(product.countInStock)\r\n            setDescription(product.description)\r\n\r\n        }\r\n\r\n    }, [successUpdate, product, dispatch, history, loading])\r\n\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            description,\r\n            countInStock\r\n        }))\r\n\r\n    }\r\n    const onChangeUploadImage = (e) => {\r\n        setFile(e.target.files[0]);\r\n\r\n    }\r\n    const onSubmitUploadImage = async (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            const res = await axios.post('/api/upload', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                },\r\n\r\n            });\r\n            const {fileName, filePath} = res.data\r\n\r\n            dispatch(updateProduct({\r\n                _id: productId,\r\n                name,\r\n                price,\r\n                image: fileName,\r\n                brand,\r\n                category,\r\n                description,\r\n                countInStock\r\n            }))\r\n            setImage(fileName)\r\n            setUploading(true)\r\n            history.push(`/admin/product/${match.params.id}/edit`)\r\n        } catch (err) {\r\n            if (err.response.status === 500) {\r\n                console.log('There was a problem with the server');\r\n            } else if (err.response.status === 422) {\r\n                console.log('just image');\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>Go Back</Link>\r\n            <Container className='py-3 w3-animate-opacity'>\r\n                <Row className='justify-content-md-center'>\r\n                    <Col xs={12} md={6}>\r\n                        <h1>Edit Product</h1>\r\n                        {loadingUpdate && <Loader/>}\r\n                        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                        {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n                            <Form onSubmit={submitHandler}>\r\n\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter name' value={name || ''}\r\n                                                  onChange={(e) => setName(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='Price'>\r\n                                    <Form.Label>Price</Form.Label>\r\n                                    <Form.Control type='number' placeholder='Enter price' value={price || ''}\r\n                                                  onChange={(e) => setPrice(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n\r\n                                <Form.Control type='hidden' value={image || ''}\r\n                                              onChange={(e) => setImage(e.target.value)}>\r\n                                </Form.Control>\r\n\r\n\r\n                                <Form.Group controlId='brand'>\r\n                                    <Form.Label>Brand</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter brand' value={brand || ''}\r\n                                                  onChange={(e) => setBrand(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='countInStock'>\r\n                                    <Form.Label>count in stock</Form.Label>\r\n                                    <Form.Control type='number' placeholder='Enter price' value={countInStock || ''}\r\n                                                  onChange={(e) => setCountInStock(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='category'>\r\n                                    <Form.Label>category</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter category' value={category || ''}\r\n                                                  onChange={(e) => setCategory(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='description'>\r\n                                    <Form.Label>description</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter description' value={description || ''}\r\n                                                  onChange={(e) => setDescription(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button type='submit' variant='primary'>\r\n                                    update\r\n                                </Button>\r\n\r\n                            </Form>\r\n                        )}\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                        {loading ? '' : error ? <Message variant='danger'>{error}</Message> : (\r\n                            <form onSubmit={onSubmitUploadImage}>\r\n                                <div className='custom-file mb-4'>\r\n                                    <Image fluid src={`/images/${image}`}/>\r\n                                    <Form.File\r\n                                        id=\"customFile\"\r\n                                        label=\"Custom file input\"\r\n                                        custom\r\n                                        onChange={onChangeUploadImage}\r\n                                    />\r\n                                    {uploading}\r\n                                </div>\r\n\r\n                                <input\r\n                                    type='submit'\r\n                                    value='Upload'\r\n                                    className='btn btn-primary btn-block mt-4'\r\n                                />\r\n                            </form>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default ProductEditScreen;","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\Message.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\Product.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\actions\\userAction.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\actions\\productActions.js",["183","184","185"],"import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_SUCCESS\r\n} from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\nimport {ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS} from \"../constants/orderConstants\";\r\n\r\n// redux action for calling reducer\r\n// return object\r\n// reason function in function is THUNK for async request\r\n// \"dispatch\" for dispatch requests\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '',) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_LIST_REQUEST\r\n        })\r\n        const {data} = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n        const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message && localStorage.removeItem('userInfo')\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const CreateProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(`/api/products`, {}, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/products/${product._id}`, product, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message\r\n\r\n        })\r\n\r\n    }\r\n}","C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\screens\\Admin\\ordersListScreen.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\HSK\\Desktop\\git-store\\jsShop\\frontend\\src\\components\\Paginate.js",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":36,"column":8,"nodeType":"192","endLine":36,"endColumn":18,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":9,"column":48,"nodeType":"196","messageId":"197","endLine":9,"endColumn":63},{"ruleId":"194","severity":1,"message":"198","line":1,"column":16,"nodeType":"196","messageId":"197","endLine":1,"endColumn":24},{"ruleId":"194","severity":1,"message":"198","line":1,"column":16,"nodeType":"196","messageId":"197","endLine":1,"endColumn":24},{"ruleId":"194","severity":1,"message":"199","line":23,"column":21,"nodeType":"196","messageId":"197","endLine":23,"endColumn":31},{"ruleId":"190","severity":1,"message":"200","line":47,"column":8,"nodeType":"192","endLine":47,"endColumn":55,"suggestions":"201"},{"ruleId":"194","severity":1,"message":"202","line":49,"column":11,"nodeType":"196","messageId":"197","endLine":49,"endColumn":32},{"ruleId":"203","severity":1,"message":"204","line":65,"column":44,"nodeType":"205","messageId":"206","endLine":65,"endColumn":78},{"ruleId":"194","severity":1,"message":"207","line":87,"column":30,"nodeType":"196","messageId":"197","endLine":87,"endColumn":38},{"ruleId":"194","severity":1,"message":"208","line":20,"column":9,"nodeType":"196","messageId":"197","endLine":20,"endColumn":27},{"ruleId":"194","severity":1,"message":"209","line":20,"column":29,"nodeType":"196","messageId":"197","endLine":20,"endColumn":50},{"ruleId":"194","severity":1,"message":"210","line":20,"column":52,"nodeType":"196","messageId":"197","endLine":20,"endColumn":73},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'Redirect'. Either exclude it or remove the dependency array. Outer scope values like 'Redirect' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["213"],"no-unused-vars","'ORDER_LIST_REST' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'loadingPay' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'order'. Either include it or remove the dependency array.",["214"],"'SuccessPaymentHandler' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'filePath' is assigned a value but never used.","'ORDER_LIST_MY_FAIL' is defined but never used.","'ORDER_LIST_MY_REQUEST' is defined but never used.","'ORDER_LIST_MY_SUCCESS' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},"Update the dependencies array to be: []",{"range":"219","text":"220"},"Update the dependencies array to be: [dispatch, order, orderId, successDeliver, successPay]",{"range":"221","text":"222"},[1573,1583],"[]",[1575,1622],"[dispatch, order, orderId, successDeliver, successPay]"]