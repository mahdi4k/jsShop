[{"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\index.js":"1","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\store.js":"3","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\App.js":"4","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\reducers\\userReducers.js":"5","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\reducers\\productReducer.js":"6","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\Footer.js":"7","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\reducers\\orderReducer.js":"8","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\reducers\\categoryReducer.js":"9","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\HomeScreen.js":"10","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\Header.js":"11","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\ProductScreen.js":"12","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\CartScreen.js":"13","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\LoginScreen.js":"14","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\RegisterScreen.js":"15","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\ShippingScreen.js":"16","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\PaymentScreen.js":"17","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\placeOrderScreen.js":"18","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\ProfileScreen.js":"19","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\OrderScreen.js":"20","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\UserListScreen.js":"21","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\Admin\\productsListScreen.js":"22","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\Admin\\UserEditScreen.js":"23","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\Admin\\productEditScreen.js":"24","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\Admin\\CreateProductScreen.js":"25","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\Admin\\CategoryProductScreen.js":"26","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\Admin\\ordersListScreen.js":"27","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\reducers\\cartReducer.js":"28","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\Product.js":"29","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\Message.js":"30","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\Loader.js":"31","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\Paginate.js":"32","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\SearchBox.js":"33","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\ProductCarousel.js":"34","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\FormContainer.js":"35","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\Rating.js":"36","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\constants\\orderConstants.js":"37","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\constants\\userConstants.js":"38","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\constants\\productConstants.js":"39","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\constants\\cartConstants.js":"40","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\constants\\CategoryConstants.js":"41","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\actions\\userAction.js":"42","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\actions\\productActions.js":"43","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\actions\\cartActions.js":"44","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\actions\\orderActions.js":"45","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\actions\\categoryAction.js":"46","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\CheckoutSteps.js":"47"},{"size":691,"mtime":1650875412972,"results":"48","hashOfConfig":"49"},{"size":375,"mtime":1650875412972,"results":"50","hashOfConfig":"49"},{"size":2747,"mtime":1650875412988,"results":"51","hashOfConfig":"49"},{"size":3674,"mtime":1650875412941,"results":"52","hashOfConfig":"49"},{"size":4030,"mtime":1650875412972,"results":"53","hashOfConfig":"49"},{"size":4198,"mtime":1650875412972,"results":"54","hashOfConfig":"49"},{"size":241,"mtime":1650875412957,"results":"55","hashOfConfig":"49"},{"size":4177,"mtime":1650875412972,"results":"56","hashOfConfig":"49"},{"size":660,"mtime":1650875412972,"results":"57","hashOfConfig":"49"},{"size":1634,"mtime":1650875412972,"results":"58","hashOfConfig":"49"},{"size":4522,"mtime":1650875412957,"results":"59","hashOfConfig":"49"},{"size":9951,"mtime":1650875412988,"results":"60","hashOfConfig":"49"},{"size":4262,"mtime":1650875412972,"results":"61","hashOfConfig":"49"},{"size":2758,"mtime":1650875412972,"results":"62","hashOfConfig":"49"},{"size":3539,"mtime":1650875412988,"results":"63","hashOfConfig":"49"},{"size":2741,"mtime":1650875412988,"results":"64","hashOfConfig":"49"},{"size":1928,"mtime":1650875412988,"results":"65","hashOfConfig":"49"},{"size":6292,"mtime":1650875412988,"results":"66","hashOfConfig":"49"},{"size":5969,"mtime":1650875412988,"results":"67","hashOfConfig":"49"},{"size":8136,"mtime":1650875412972,"results":"68","hashOfConfig":"49"},{"size":2886,"mtime":1650875412988,"results":"69","hashOfConfig":"49"},{"size":4544,"mtime":1650875412972,"results":"70","hashOfConfig":"49"},{"size":3536,"mtime":1650875412972,"results":"71","hashOfConfig":"49"},{"size":9010,"mtime":1650875412972,"results":"72","hashOfConfig":"49"},{"size":7899,"mtime":1650875412972,"results":"73","hashOfConfig":"49"},{"size":2787,"mtime":1650875412972,"results":"74","hashOfConfig":"49"},{"size":3298,"mtime":1650875412972,"results":"75","hashOfConfig":"49"},{"size":1416,"mtime":1650875412972,"results":"76","hashOfConfig":"49"},{"size":997,"mtime":1650875412957,"results":"77","hashOfConfig":"49"},{"size":291,"mtime":1650875412957,"results":"78","hashOfConfig":"49"},{"size":507,"mtime":1650875412957,"results":"79","hashOfConfig":"49"},{"size":686,"mtime":1650875412957,"results":"80","hashOfConfig":"49"},{"size":839,"mtime":1650875412957,"results":"81","hashOfConfig":"49"},{"size":1324,"mtime":1650875412957,"results":"82","hashOfConfig":"49"},{"size":426,"mtime":1650875412957,"results":"83","hashOfConfig":"49"},{"size":1706,"mtime":1650875412957,"results":"84","hashOfConfig":"49"},{"size":1216,"mtime":1650875412972,"results":"85","hashOfConfig":"49"},{"size":1505,"mtime":1650875412972,"results":"86","hashOfConfig":"49"},{"size":1476,"mtime":1650875412972,"results":"87","hashOfConfig":"49"},{"size":238,"mtime":1650875412972,"results":"88","hashOfConfig":"49"},{"size":244,"mtime":1650875412957,"results":"89","hashOfConfig":"49"},{"size":7035,"mtime":1650875412957,"results":"90","hashOfConfig":"49"},{"size":5991,"mtime":1650875412941,"results":"91","hashOfConfig":"49"},{"size":1325,"mtime":1650875412941,"results":"92","hashOfConfig":"49"},{"size":5203,"mtime":1650875412941,"results":"93","hashOfConfig":"49"},{"size":928,"mtime":1650875412941,"results":"94","hashOfConfig":"49"},{"size":1844,"mtime":1650875412957,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k6hi6c",{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\index.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\store.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\App.js",["201"],"//import React , {useState,useEffect} from 'react';\r\nimport React, {useEffect} from \"react\";\r\nimport {BrowserRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\r\nimport './App.css';\r\nimport jwt from 'jwt-decode'\r\nimport {Container} from \"react-bootstrap\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport placeOrderScreen from \"./screens/placeOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport UserEditScreen from \"./screens/Admin/UserEditScreen\";\r\nimport ProductListScreen from \"./screens/Admin/productsListScreen\";\r\nimport ProductEditScreen from \"./screens/Admin/productEditScreen\"\r\nimport OrdersList from \"./screens/Admin/ordersListScreen\";\r\nimport CreateProductScreen from \"./screens/Admin/CreateProductScreen\";\r\nimport CategoryCreateScreen from \"./screens/Admin/CategoryProductScreen\";\r\n\r\nfunction App() {\r\n    useEffect(() => {\r\n        if (localStorage.getItem('userInfo') !== null) {\r\n            const {token} = JSON.parse(localStorage.getItem('userInfo'))\r\n            const {exp} = jwt(token)\r\n\r\n            if (Date.now() >= exp * 1000) {\r\n                localStorage.clear();\r\n                (<Redirect to=\"/\"/>)\r\n            }\r\n        }\r\n    }, [Redirect])\r\n    return (\r\n        <Router>\r\n            <Header/>\r\n            <Container>\r\n                <Switch>\r\n\r\n                    <Route path='/login' component={LoginScreen}/>\r\n                    <Route path='/shipping' component={ShippingScreen}/>\r\n                    <Route path='/Payment' component={PaymentScreen}/>\r\n                    <Route path='/placeorder' component={placeOrderScreen}/>\r\n                    <Route path='/order/:id' component={OrderScreen}/>\r\n                    <Route path='/register' component={RegisterScreen}/>\r\n                    <Route path='/profile' component={ProfileScreen}/>\r\n                    <Route path='/cart/:id?' component={CartScreen}/>\r\n                    <Route path='/admin/userlist' component={UserListScreen}/>\r\n                    <Route path='/admin/productlist' exact component={ProductListScreen}/>\r\n                    <Route path='/admin/productlist/:pageNumber' exact component={ProductListScreen}/>\r\n                    <Route path='/admin/orderlist' component={OrdersList}/>\r\n                    <Route path='/admin/category' component={CategoryCreateScreen}/>\r\n                    <Route path='/admin/user/:id/edit' component={UserEditScreen}/>\r\n                    <Route path='/product/:id' component={ProductScreen}/>\r\n                    <Route path='/admin/product/:id/edit' component={ProductEditScreen}/>\r\n                    <Route path='/admin/product/create' component={CreateProductScreen}/>\r\n                    <Route path='/search/:keyword' component={HomeScreen} exact/>\r\n                    <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact/>\r\n                    <Route path='/page/:pageNumber' component={HomeScreen} exact/>\r\n                    <Route path='/' component={HomeScreen} exact/>\r\n\r\n                </Switch>\r\n            </Container>\r\n            <Footer/>\r\n\r\n        </Router>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\reducers\\productReducer.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\reducers\\orderReducer.js",["202"],"import {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_RESET, ORDER_DELIVER_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_REST,\r\n    ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_REST, ORDER_LIST_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_RESET,\r\n    ORDER_PAY_SUCCESS,\r\n} from \"../constants/orderConstants\";\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST :\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS :\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL :\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const orderDetailReducer = (state = {loading: true, orderItems: [], shippingAddress: {}}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST :\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS :\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL :\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const orderUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST :\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS :\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL :\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET :\r\n            return {}\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = {orders: []}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST :\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS :\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL :\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_REST :\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const adminOrderList = (state = {orders: []}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST :\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_SUCCESS :\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL :\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {orders: []}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST :\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS :\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL :\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET :\r\n            return {}\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\reducers\\categoryReducer.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\HomeScreen.js",["203"],"import React, {useEffect} from 'react';\r\nimport {Helmet} from \"react-helmet\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Product from \"../components/Product\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {listProducts} from \"../actions/productActions\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport ProductCarousel from \"../components/ProductCarousel\";\r\n\r\n// productList is coming from global state from store.js\r\n\r\n\r\nconst HomeScreen = ({match}) => {\r\n\r\n    const keyword = match.params.keyword\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(listProducts(keyword, pageNumber))\r\n\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n//from global state\r\n    const productList = useSelector(state => state.productList)\r\n\r\n    const {loading, error, products, page, pages} = productList\r\n\r\n    const productItems = products.map(product => (\r\n        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n            <Product product={product}/>\r\n        </Col>\r\n    ))\r\n    return (\r\n        <>\r\n            { !keyword && <ProductCarousel/> }\r\n            <h1>Latest Products</h1>\r\n\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> :\r\n                <>\r\n                    <Row> {productItems} </Row>\r\n                    <Paginate keyword={keyword ? keyword : ''} page={page} pages={pages}/>\r\n                </>\r\n            }\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;\r\n","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\Header.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\placeOrderScreen.js",["204"],"import React, {useState, useEffect} from 'react';\r\nimport {Button, Row, Col, ListGroup, Image, Card} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {createOrder} from \"../actions/orderActions\";\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => (\r\n        acc + item.price * item.qty\r\n    ), 0)\r\n\r\n    cart.shippingPrice = cart.itemsPrice > 100 ? 0 : 5\r\n\r\n    cart.taxPrice = Number((0.15 * cart.itemsPrice).toFixed(2))\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {order, success, error} = orderCreate\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n    }, [history, success, order])\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <Row>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Shipping</h2>\r\n                                <p>\r\n                                    <strong>Address:</strong>\r\n                                    {cart.shippingAddress.address},\r\n                                    {cart.shippingAddress.city},\r\n                                    {cart.shippingAddress.country},\r\n                                    {cart.shippingAddress.postalCode},\r\n                                </p>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <h2>Payment Method</h2>\r\n                                <strong>Method : </strong>\r\n                                {cart.paymentMethod.paymentMethod}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Items</h2>\r\n                                {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> :\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <Row className=\"mt-3\" key={item.product}>\r\n                                                <Col md={1}>\r\n                                                    <Image src={`/images/${item.image}`} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n\r\n                                                </Col>\r\n                                            </Row>\r\n                                        ))}\r\n                                    </ListGroup>\r\n\r\n                                }\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn-block' disabled={cart.cartItems === 0}\r\n                                        onClick={placeOrderHandler}>\r\n                                    place order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PlaceOrderScreen;","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\OrderScreen.js",["205","206","207","208","209","210","211","212"],"import React, {useState, useEffect} from 'react';\r\nimport {Button, Row, Col, ListGroup, Image, Card, Nav} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {getOrderDetails, payOrder, deliverOrder} from \"../actions/orderActions\";\r\nimport {ORDER_DELIVER_RESET, ORDER_PAY_RESET,} from \"../constants/orderConstants\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nconst OrderScreen = ({match,history}) => {\r\n\r\n    const orderId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n\r\n    const {order, loading, error} = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n\r\n    const {loading: loadingPay, success: successPay} = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n\r\n    const {loading: loadingDeliver, success: successDeliver} = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n\r\n    const {userInfo} = userLogin\r\n\r\n    if (!loading) {\r\n        // calculate price\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => (\r\n            acc + item.price * item.qty\r\n        ), 0)\r\n\r\n        order.shippingPrice = order.itemsPrice > 100 ? 0 : 5\r\n    }\r\n    useEffect(() => {\r\n\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n        }\r\n        dispatch(getOrderDetails(orderId))\r\n    }, [dispatch, orderId, successDeliver, successPay])\r\n\r\n    const SuccessPaymentHandler = () => {\r\n\r\n        window.open(\"https://sandbox.zarinpal.com/pg/StartPay/000000000000000000000000000000375698\",\"\",\"width=200,height=100\")\r\n    }\r\n    const orderHandler = async () => {\r\n        const {data} = await axios.post('/PaymentRequest',{totalPrice : order.totalPrice})\r\n        var zarinpalWindows = window.open(\"\", \"zarinpalWindows\", \"fullscreen=yes,titlebar=no,scrollbars=no,resizable=no,menubar=no\");\r\n        zarinpalWindows.document.write(data);\r\n\r\n     }\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n    return loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> :\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <Row>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Shipping</h2>\r\n                                <p><strong>Name :</strong>{order.user.name}</p>\r\n                                <p><a href=\"{`mailto : ${order.user.email}`}\">{order.user.email}</a></p>\r\n                                <p>\r\n                                    <strong>Address:</strong>\r\n                                    {order.shippingAddress.address},\r\n                                    {order.shippingAddress.city},\r\n                                    {order.shippingAddress.country},\r\n                                    {order.shippingAddress.postalCode},\r\n                                </p>\r\n                                {order.isDelivered ?\r\n                                    <Message variant='success'>Delivered on {order.deliveredAt}</Message> :\r\n                                    <Message variant='danger'>Not Delivered</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <h2>Payment Method</h2>\r\n                                <strong>Method : </strong>\r\n                                <p>  {order.paymentMethod.paymentMethod}</p>\r\n                                {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> :\r\n                                    <Message variant='danger'>Not paid</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Items</h2>\r\n                                {order.orderItems.length === 0 ? <Message>Order is empty</Message> :\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <Row className=\"mt-3\" key={item.product}>\r\n                                                <Col md={1}>\r\n                                                    <Image src={`/images/${item.image}`} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        ))}\r\n                                    </ListGroup>\r\n\r\n                                }\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {loadingDeliver && <loader/>}\r\n                                {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button onClick={deliverHandler} type='button' className='btn btn-block'>\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n\r\n                                    <Button target='_blank' onClick={orderHandler} variant='info'>\r\n                                        Pay\r\n                                    </Button>\r\n\r\n\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n};\r\n\r\nexport default OrderScreen;","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\Admin\\productsListScreen.js",["213"],"import React, {useEffect} from 'react';\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport {Table, Button, Row, Col} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../../components/Message\";\r\nimport Loader from \"../../components/Loader\";\r\nimport {listProducts, deleteProduct, CreateProduct} from \"../../actions/productActions\";\r\nimport {PRODUCT_CREATE_RESET} from \"../../constants/productConstants\";\r\nimport Paginate from \"../../components/Paginate\";\r\n\r\nconst ProductListScreen = ({history, match}) => {\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products, page, pages} = productList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {loading: loadingDelete, error: errorDelete, success: successDelete} = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct} = productCreate\r\n\r\n    useEffect(() => {\r\n        dispatch({type: PRODUCT_CREATE_RESET})\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber])\r\n\r\n\r\n    const ProductList = products.map(product => (\r\n        <tr key={product._id}>\r\n            <td>{product._id}</td>\r\n            <td>{product.name}</td>\r\n            <td>\r\n                {product.price}\r\n            </td>\r\n            <td>\r\n                {product.category}\r\n            </td>\r\n            <td>\r\n                {product.brand}\r\n            </td>\r\n            <td style={{textAlign: \"center\"}}>\r\n                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'> </i>\r\n                    </Button>\r\n                </LinkContainer>\r\n                <Button variant='danger' className='btn-sm btn'\r\n                        onClick={() => deleteHandler(product._id)}>\r\n                    <i className='fas fa-trash'> </i>\r\n                </Button>\r\n            </td>\r\n        </tr>\r\n    ))\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <LinkContainer to={`/admin/product/create`}>\r\n                        <Button className='my-3'>\r\n                            <i className='fas fa-plus'> </i> Creat product\r\n                        </Button>\r\n                    </LinkContainer>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader/>}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader/>}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> :\r\n                (\r\n                    <>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>price</th>\r\n                                <th>Category</th>\r\n                                <th>Brand</th>\r\n                                <th></th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                            {ProductList}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                        <Paginate isAdmin={true} page={page} pages={pages}/>\r\n\r\n                    </>\r\n                )\r\n\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductListScreen;","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\Admin\\UserEditScreen.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\Admin\\productEditScreen.js",["214","215"],"import axios from \"axios\";\r\nimport React, {useState, useEffect} from 'react';\r\nimport {Form, Button, Col, Container, Row, Image} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../../components/Message\";\r\nimport Loader from \"../../components/Loader\";\r\nimport {listProductDetails, updateProduct} from \"../../actions/productActions\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {PRODUCT_UPDATE_RESET} from \"../../constants/productConstants\";\r\n\r\nconst ProductEditScreen = ({match, history}) => {\r\n    const productId = match.params.id //url param :id\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('/placeholder.png')\r\n    const [preImage, setPreImage] = useState(null)\r\n    const [file, setFile] = useState('');\r\n    const [brand, setBrand] = useState()\r\n    const [category, setCategory] = useState()\r\n    const [countInStock, setCountInStock] = useState()\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const {error: errorUpdate, loading: loadingUpdate, success: successUpdate} = productUpdate\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const {loading, error, product} = productDetails\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match]);\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            //for remove old data product\r\n            dispatch({type: PRODUCT_UPDATE_RESET});\r\n        }\r\n\r\n        if (loading === false) {\r\n            setName(product.name)\r\n            setPrice(product.price)\r\n            setImage(product.image)\r\n            setBrand(product.brand)\r\n            setCategory(product.category)\r\n            setCountInStock(product.countInStock)\r\n            setDescription(product.description)\r\n        }\r\n\r\n    }, [successUpdate, product, dispatch, history, loading])\r\n\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            description,\r\n            countInStock\r\n        }))\r\n\r\n    }\r\n    const onChangeUploadImage = (e) => {\r\n        const targetFile = e.target.files[0]\r\n        setFile(targetFile);\r\n        setPreImage(targetFile.name)\r\n        const reader = new FileReader();\r\n        const url = reader.readAsDataURL(targetFile);\r\n        reader.onloadend =  () => {\r\n            setImage(reader.result)\r\n        }\r\n    }\r\n    const onSubmitUploadImage = async (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        setPreImage(null)\r\n        try {\r\n            const res = await axios.post('/api/upload', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                },\r\n\r\n            });\r\n            const {fileName, filePath} = res.data\r\n\r\n            dispatch(updateProduct({\r\n                _id: productId,\r\n                name,\r\n                price,\r\n                image: fileName,\r\n                brand,\r\n                category,\r\n                description,\r\n                countInStock\r\n            }))\r\n            setImage(fileName)\r\n            setUploading(true)\r\n            history.push(`/admin/product/${match.params.id}/edit`)\r\n        } catch (err) {\r\n            if (err.response.status === 500) {\r\n                console.log('There was a problem with the server');\r\n            } else if (err.response.status === 422) {\r\n                console.log('just image');\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>Go Back</Link>\r\n            <Container className='py-3 w3-animate-opacity'>\r\n                <Row className='justify-content-md-center'>\r\n                    <Col xs={12} md={6}>\r\n                        <h1>Edit Product</h1>\r\n                        {loadingUpdate && <Loader/>}\r\n                        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                        {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n                            <Form onSubmit={submitHandler}>\r\n\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter name' value={name || ''}\r\n                                                  onChange={(e) => setName(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='Price'>\r\n                                    <Form.Label>Price</Form.Label>\r\n                                    <Form.Control type='number' placeholder='Enter price' value={price || ''}\r\n                                                  onChange={(e) => setPrice(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n\r\n                                <Form.Control type='hidden' value={image || ''}\r\n                                              onChange={(e) => setImage(e.target.value)}>\r\n                                </Form.Control>\r\n\r\n\r\n                                <Form.Group controlId='brand'>\r\n                                    <Form.Label>Brand</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter brand' value={brand || ''}\r\n                                                  onChange={(e) => setBrand(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='countInStock'>\r\n                                    <Form.Label>count in stock</Form.Label>\r\n                                    <Form.Control type='number' placeholder='Enter price' value={countInStock || ''}\r\n                                                  onChange={(e) => setCountInStock(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='category'>\r\n                                    <Form.Label>category</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter category' value={category || ''}\r\n                                                  onChange={(e) => setCategory(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='description'>\r\n                                    <Form.Label>description</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter description' value={description || ''}\r\n                                                  onChange={(e) => setDescription(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button type='submit' variant='primary'>\r\n                                    update\r\n                                </Button>\r\n\r\n                            </Form>\r\n                        )}\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                        {loading ? '' : error ? <Message variant='danger'>{error}</Message> : (\r\n                            <form onSubmit={onSubmitUploadImage}>\r\n                                <div className='custom-file mb-4'>\r\n                                    <Image fluid src={preImage ? image : `/images/${image}`}/>\r\n                                    <Form.File\r\n                                        id=\"customFile\"\r\n                                        label={preImage ? preImage : \"choose image\"}\r\n                                        custom\r\n                                        onChange={onChangeUploadImage}\r\n                                    />\r\n                                    {uploading}\r\n                                </div>\r\n\r\n                                <input\r\n                                    type='submit'\r\n                                    value='Upload'\r\n                                    className='btn btn-primary btn-block mt-4'\r\n                                />\r\n                            </form>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default ProductEditScreen;","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\Admin\\CreateProductScreen.js",["216","217","218","219"],"import axios from \"axios\";\r\nimport React, {useState, useEffect} from 'react';\r\nimport {Form, Button, Col, Container, Row, Image} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../../components/Message\";\r\nimport Loader from \"../../components/Loader\";\r\nimport {CreateProduct} from \"../../actions/productActions\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {PRODUCT_CREATE_RESET} from \"../../constants/productConstants\";\r\n\r\nconst ProductCreateScreen = ({match, history}) => {\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('/placeholder.png')\r\n    const [preImage, setPreImage] = useState(null)\r\n    const [file, setFile] = useState('');\r\n    const [brand, setBrand] = useState()\r\n    const [category, setCategory] = useState()\r\n    const [countInStock, setCountInStock] = useState()\r\n    const [description, setDescription] = useState('')\r\n    const [successCreateProduct, setSuccessCreateProduct] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {error: errorCreate, loading: loadingCreate, success: successCreate} = productCreate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/productlist`)\r\n        }\r\n\r\n    }, [history, successCreate])\r\n\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        setPreImage(null)\r\n        try {\r\n            const res = await axios.post('/api/upload', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                },\r\n\r\n            });\r\n            const {fileName, filePath} = res.data\r\n\r\n            dispatch(CreateProduct({\r\n                _id: Date.now(),\r\n                name,\r\n                price,\r\n                image: fileName,\r\n                brand,\r\n                category,\r\n                description,\r\n                countInStock\r\n            }))\r\n            setImage(fileName)\r\n            setSuccessCreateProduct(true)\r\n        } catch (err) {\r\n            if (err.response.status === 500) {\r\n                console.log('There was a problem with the server');\r\n            } else if (err.response.status === 422) {\r\n                console.log('just image');\r\n            }\r\n        }\r\n\r\n    }\r\n    const onChangeUploadImage = (e) => {\r\n        const targetFile = e.target.files[0]\r\n        setFile(targetFile);\r\n        setPreImage(targetFile.name)\r\n        const reader = new FileReader();\r\n        const url = reader.readAsDataURL(targetFile);\r\n        reader.onloadend = () => {\r\n            setImage(reader.result)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>Go Back</Link>\r\n            <Container className='py-3 w3-animate-opacity'>\r\n                <Row className='justify-content-md-center'>\r\n                    <Col xs={12} md={12}>\r\n                        <h1>Create Product</h1>\r\n\r\n                        {loadingCreate ? <Loader/> : errorCreate ? <Message variant='danger'>{errorCreate}</Message> : (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Row>\r\n\r\n                                    <Col xs={12} md={6}>\r\n                                        <Form.Group controlId='name'>\r\n                                            <Form.Label>Name</Form.Label>\r\n                                            <Form.Control type='text' placeholder='Enter name' value={name || ''}\r\n                                                          onChange={(e) => setName(e.target.value)}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group controlId='Price'>\r\n                                            <Form.Label>Price</Form.Label>\r\n                                            <Form.Control type='number' placeholder='Enter price' value={price || ''}\r\n                                                          onChange={(e) => setPrice(e.target.value)}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n\r\n\r\n                                        <Form.Control type='hidden' value={image || ''}\r\n                                                      onChange={(e) => setImage(e.target.value)}>\r\n                                        </Form.Control>\r\n\r\n\r\n                                        <Form.Group controlId='brand'>\r\n                                            <Form.Label>Brand</Form.Label>\r\n                                            <Form.Control type='text' placeholder='Enter brand' value={brand || ''}\r\n                                                          onChange={(e) => setBrand(e.target.value)}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group controlId='countInStock'>\r\n                                            <Form.Label>count in stock</Form.Label>\r\n                                            <Form.Control type='number' placeholder='Enter price'\r\n                                                          value={countInStock || ''}\r\n                                                          onChange={(e) => setCountInStock(e.target.value)}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group controlId='category'>\r\n                                            <Form.Label>category</Form.Label>\r\n                                            <Form.Control type='text' placeholder='Enter category'\r\n                                                          value={category || ''}\r\n                                                          onChange={(e) => setCategory(e.target.value)}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group controlId='description'>\r\n                                            <Form.Label>description</Form.Label>\r\n                                            <Form.Control type='text' placeholder='Enter description'\r\n                                                          value={description || ''}\r\n                                                          onChange={(e) => setDescription(e.target.value)}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col xs={12} md={6}>\r\n                                        <Image fluid src={preImage ? image : `/images/${image}`}/>\r\n                                        <Form.File\r\n                                            id=\"customFile\"\r\n                                            label={preImage ? preImage : \"choose image\"}\r\n                                            custom\r\n                                            onChange={onChangeUploadImage}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Button type='submit' variant='primary'>\r\n                                    create\r\n                                </Button>\r\n\r\n                            </Form>\r\n                        )}\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Container>\r\n\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default ProductCreateScreen;","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\Admin\\CategoryProductScreen.js",["220"],"import React, {useState, useEffect} from 'react';\r\nimport {Form, Button, Col, Container, Row} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../../components/Message\";\r\nimport Loader from \"../../components/Loader\";\r\nimport {CreateCategory} from \"../../actions/categoryAction\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {CATEGORY_CREATE_RESET} from \"../../constants/CategoryConstants\";\r\n\r\nconst CategoryCreateScreen = ({history}) => {\r\n    const [name, setName] = useState('')\r\n    const dispatch = useDispatch()\r\n    const categoryCreate = useSelector(state => state.CategoryProduct)\r\n    const {error: errorCreate, loading: loadingCreate, success: successCreate} = categoryCreate\r\n\r\n    useEffect(() => {\r\n        dispatch({type: CATEGORY_CREATE_RESET})\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/productlist`)\r\n        }\r\n\r\n    }, [history, successCreate])\r\n\r\n\r\n    const submitHandler = async (e) => {\r\n        const slug =  name.toLowerCase().replace(/ /g, '-').replace(/[^\\w-]+/g, '')\r\n\r\n        e.preventDefault()\r\n        dispatch(CreateCategory({name, slug}))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>Go Back</Link>\r\n            <Container className='py-3 w3-animate-opacity'>\r\n                <Row className='justify-content-md-center'>\r\n                    <Col xs={12} md={12}>\r\n                        <h1>Create Category</h1>\r\n\r\n                        {loadingCreate ? <Loader/> : errorCreate ? <Message variant='danger'>{errorCreate}</Message> : (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Row>\r\n\r\n                                    <Col xs={12} md={6}>\r\n                                        <Form.Group controlId='name'>\r\n                                            <Form.Label>Name</Form.Label>\r\n                                            <Form.Control type='text' placeholder='Enter Category name'\r\n                                                          value={name || ''}\r\n                                                          onChange={(e) => setName(e.target.value)}>\r\n                                            </Form.Control>\r\n\r\n                                        </Form.Group>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n                                <Button type='submit' variant='primary'>\r\n                                    create\r\n                                </Button>\r\n\r\n                            </Form>\r\n                        )}\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Container>\r\n\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default CategoryCreateScreen;","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\screens\\Admin\\ordersListScreen.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\reducers\\cartReducer.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\Product.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\Message.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\constants\\CategoryConstants.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\actions\\userAction.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\actions\\productActions.js",["221","222","223"],"import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL\r\n} from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\nimport {ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS} from \"../constants/orderConstants\";\r\n\r\n// redux action for calling reducer\r\n// return object\r\n// reason function in function is THUNK for async request\r\n// \"dispatch\" for dispatch requests\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '',) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_LIST_REQUEST\r\n        })\r\n        const {data} = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n        const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message && localStorage.removeItem('userInfo')\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const CreateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(`/api/products`, product, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/products/${product._id}`, product, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_TOP_REQUEST\r\n        })\r\n        const {data} = await axios.get(`/api/products/rating/top`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\actions\\orderActions.js",["224"],"import {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n} from \"../constants/orderConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message  \r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message  \r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get('/PaymentRequest')\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message  \r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/orders/${order._id}/deliver`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message  \r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message  \r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const adminOrdersList = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message  \r\n\r\n        })\r\n\r\n    }\r\n}","C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\actions\\categoryAction.js",[],"C:\\Users\\bistun\\Desktop\\jsShop\\frontend\\src\\components\\CheckoutSteps.js",[],{"ruleId":"225","severity":1,"message":"226","line":38,"column":8,"nodeType":"227","endLine":38,"endColumn":18,"suggestions":"228"},{"ruleId":"229","severity":1,"message":"230","line":9,"column":48,"nodeType":"231","messageId":"232","endLine":9,"endColumn":63},{"ruleId":"229","severity":1,"message":"233","line":2,"column":9,"nodeType":"231","messageId":"232","endLine":2,"endColumn":15},{"ruleId":"229","severity":1,"message":"234","line":1,"column":16,"nodeType":"231","messageId":"232","endLine":1,"endColumn":24},{"ruleId":"229","severity":1,"message":"234","line":1,"column":16,"nodeType":"231","messageId":"232","endLine":1,"endColumn":24},{"ruleId":"229","severity":1,"message":"235","line":2,"column":51,"nodeType":"231","messageId":"232","endLine":2,"endColumn":54},{"ruleId":"229","severity":1,"message":"236","line":7,"column":26,"nodeType":"231","messageId":"232","endLine":7,"endColumn":34},{"ruleId":"229","severity":1,"message":"237","line":9,"column":9,"nodeType":"231","messageId":"232","endLine":9,"endColumn":22},{"ruleId":"229","severity":1,"message":"238","line":25,"column":21,"nodeType":"231","messageId":"232","endLine":25,"endColumn":31},{"ruleId":"225","severity":1,"message":"239","line":50,"column":8,"nodeType":"227","endLine":50,"endColumn":55,"suggestions":"240"},{"ruleId":"229","severity":1,"message":"241","line":52,"column":11,"nodeType":"231","messageId":"232","endLine":52,"endColumn":32},{"ruleId":"242","severity":1,"message":"243","line":75,"column":44,"nodeType":"244","messageId":"245","endLine":75,"endColumn":78},{"ruleId":"229","severity":1,"message":"246","line":7,"column":38,"nodeType":"231","messageId":"232","endLine":7,"endColumn":51},{"ruleId":"229","severity":1,"message":"247","line":76,"column":15,"nodeType":"231","messageId":"232","endLine":76,"endColumn":18},{"ruleId":"229","severity":1,"message":"248","line":93,"column":30,"nodeType":"231","messageId":"232","endLine":93,"endColumn":38},{"ruleId":"229","severity":1,"message":"249","line":9,"column":9,"nodeType":"231","messageId":"232","endLine":9,"endColumn":29},{"ruleId":"229","severity":1,"message":"250","line":21,"column":12,"nodeType":"231","messageId":"232","endLine":21,"endColumn":32},{"ruleId":"229","severity":1,"message":"248","line":48,"column":30,"nodeType":"231","messageId":"232","endLine":48,"endColumn":38},{"ruleId":"229","severity":1,"message":"247","line":76,"column":15,"nodeType":"231","messageId":"232","endLine":76,"endColumn":18},{"ruleId":"225","severity":1,"message":"251","line":23,"column":8,"nodeType":"227","endLine":23,"endColumn":32,"suggestions":"252"},{"ruleId":"229","severity":1,"message":"253","line":24,"column":9,"nodeType":"231","messageId":"232","endLine":24,"endColumn":27},{"ruleId":"229","severity":1,"message":"254","line":24,"column":29,"nodeType":"231","messageId":"232","endLine":24,"endColumn":50},{"ruleId":"229","severity":1,"message":"255","line":24,"column":52,"nodeType":"231","messageId":"232","endLine":24,"endColumn":73},{"ruleId":"229","severity":1,"message":"256","line":92,"column":15,"nodeType":"231","messageId":"232","endLine":92,"endColumn":21},"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'Redirect'. Either exclude it or remove the dependency array. Outer scope values like 'Redirect' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["257"],"no-unused-vars","'ORDER_LIST_REST' is defined but never used.","Identifier","unusedVar","'Helmet' is defined but never used.","'useState' is defined but never used.","'Nav' is defined but never used.","'payOrder' is defined but never used.","'LinkContainer' is defined but never used.","'loadingPay' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'order'. Either include it or remove the dependency array.",["258"],"'SuccessPaymentHandler' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'CreateProduct' is defined but never used.","'url' is assigned a value but never used.","'filePath' is assigned a value but never used.","'PRODUCT_CREATE_RESET' is defined but never used.","'successCreateProduct' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["259"],"'ORDER_LIST_MY_FAIL' is defined but never used.","'ORDER_LIST_MY_REQUEST' is defined but never used.","'ORDER_LIST_MY_SUCCESS' is defined but never used.","'config' is assigned a value but never used.",{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},"Update the dependencies array to be: []",{"range":"266","text":"267"},"Update the dependencies array to be: [dispatch, order, orderId, successDeliver, successPay]",{"range":"268","text":"269"},"Update the dependencies array to be: [dispatch, history, successCreate]",{"range":"270","text":"271"},[1720,1730],"[]",[1673,1720],"[dispatch, order, orderId, successDeliver, successPay]",[916,940],"[dispatch, history, successCreate]"]